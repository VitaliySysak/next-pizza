generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("POSTGRES_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
    id Int @id @default(autoincrement())
    fullName String
    email String @unique
    password String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    role UserRole @default(USER)
    verificationCode VerificationCode?
    provider String?
    providerId String?
    verified DateTime

    cart Cart?
    order Order[]
}

model Category {
    id Int @id @default(autoincrement())
    name String @unique

    products Product[]
}

model Product {
    id Int @id @default(autoincrement())
    name String
    imageUrl String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    categoryId Int

    ingredients Ingredient[]
    items ProductItem[]
    category Category @relation(fields: [categoryId], references: [id])
}

model ProductItem {
    id Int @id @default(autoincrement())
    price Int
    size Int?
    pizzaType Int?

    cartItems CartItem[]
    product Product @relation(fields: [productId], references: [id])
    productId Int
}

model Ingredient {
    id Int @id @default(autoincrement())
    name String
    price Int
    imageUrl String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    cartItems CartItem[]
    products Product[]
}

model Cart {
    id Int @id @default(autoincrement())
    totalAmount Int @default(0)
    token String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    items CartItem[]
    user User? @relation(fields: [userId], references: [id])
    userId Int? @unique
}

model CartItem {
    id Int @id @default(autoincrement())
    quantity Int

    ingredients Ingredient[]
    productItem ProductItem @relation(fields: [productItemId], references: [id])
    productItemId Int
    cart Cart @relation(fields: [cartId], references: [id])
    cartId Int
}

model Order {
    id Int @id @default(autoincrement())
    token String
    totalAmount Int
    status OrderStatus
    paymentId String?
    items Json
    fullName String
    address String
    email String
    phone String
    comment String?

    user User? @relation(fields: [userId], references: [id])
    userId Int?  
}

model VerificationCode {
    id Int @id @default(autoincrement())
    code String
    createdAt DateTime @default(now())
    @@unique([userId, code])

    user User @relation(fields: [userId], references: [id])
    userId Int @unique
}

enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum UserRole {
    USER
    ADMIN
}